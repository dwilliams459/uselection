// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace USElections.Data.Models;

public partial class USElectionsDBContext : DbContext
{
    public USElectionsDBContext(DbContextOptions<USElectionsDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Event> Events { get; set; }

    public virtual DbSet<EventType> EventTypes { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Event>(entity =>
        {
            entity.ToTable("Event", "Events", tb => tb.HasComment("Table containing events held by the Charlotte office."));

            entity.Property(e => e.EventId).HasColumnName("EventID");
            entity.Property(e => e.EventName)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.EventTypeId).HasColumnName("EventTypeID");
            entity.Property(e => e.Location)
                .IsRequired()
                .HasMaxLength(255);

            entity.HasOne(d => d.EventType).WithMany(p => p.Events)
                .HasForeignKey(d => d.EventTypeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Event_EventType");
        });

        modelBuilder.Entity<EventType>(entity =>
        {
            entity.ToTable("EventType", "Events", tb => tb.HasComment("Table containing types of events held by the Charlotte office."));

            entity.Property(e => e.EventTypeId).HasColumnName("EventTypeID");
            entity.Property(e => e.EventTypeName)
                .IsRequired()
                .HasMaxLength(255);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}